# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//kernel/liteos_m/liteos.gni")

group("arch") {
  if ("$board_cpu" == "cortex-m3") {
    deps = [ "arm/cortex-m3/gcc/:arch" ]
  } else if ("$board_cpu" == "cortex-m4") {
    deps = [ "arm/cortex-m4/gcc/:arch" ]
  } else if ("$board_cpu" == "cortex-m7") {
    deps = [ "arm/cortex-m7/gcc/:arch" ]
  } else if ("$board_cpu" == "cortex-m33") {
    if (defined(LOSCFG_SECURE_TRUSTZONE)) {
      deps = [ "arm/cortex-m33/gcc/TZ:arch" ]
    } else {
      deps = [ "arm/cortex-m33/gcc/NTZ:arch" ]
    }
  } else if ("$board_cpu" == "ck802" || "$board_cpu" == "e802") {
    deps = [ "csky/v2/gcc:arch" ]
  } else if ("$board_cpu" == "") {
    if ("$board_arch" == "rv32imac" || "$board_arch" == "rv32imafdc") {
      deps = [ "risc-v/riscv32/gcc:arch" ]
    } else if ("$board" == "esp32") {
      deps = [ "xtensa/lx6/gcc:arch" ]
    }
  }
}

config("public") {
  include_dirs = [ "include" ]
  if (defined(LOSCFG_ARCH_ARM)) {
    include_dirs += [ "arm/include" ]
    if (defined(LOSCFG_ARCH_CORTEX_M3)) {
      include_dirs += [ "arm/cortex-m3/gcc" ]
    } else if (defined(LOSCFG_ARCH_CORTEX_M4)) {
      include_dirs += [ "arm/cortex-m4/gcc" ]
    } else if (defined(LOSCFG_ARCH_CORTEX_M7)) {
      include_dirs += [ "arm/cortex-m7/gcc" ]
    } else if (defined(LOSCFG_ARCH_CORTEX_M33)) {
      if (defined(LOSCFG_TRUSTZONE)) {
        include_dirs += [ "arm/cortex-m33/gcc/TZ/non_secure" ]
      } else {
        include_dirs += [ "arm/cortex-m33/gcc/NTZ" ]
      }
    }
  } else if (defined(LOSCFG_ARCH_RISCV32)) {
    include_dirs += [ "risc-v/riscv32/gcc" ]
    include_dirs += [ "risc-v/riscv32/gcc/asm" ]
  } else if (defined(LOSCFG_ARCH_CSKY)) {
    include_dirs += [ "csky/v2/gcc" ]
  } else if (defined(LOSCFG_ARCH_XTENSA)) {
    include_dirs += [ "xtensa/lx6/gcc" ]
  }
}
